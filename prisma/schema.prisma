generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @unique

  serverLevel        Int     @default(0)
  serverXp           Int     @default(0)
  serverReputation  Int      @default(0)
  serverCoins        Int     @default(0)
  profileBackground  String?
  profileDescription String?
  wordsPerMinute     Int     @default(0)
  lettersPerPost     Int     @default(0)
  characterKills     Int     @default(0)

  chosenChar         Char?            @relation("chosenChar")
  chars              Char[]
  serverMessages     ServerMessages[] @relation("user")
  pendingSubmissions CharSubmission[] @relation("userSubmission")
  chosenCharId       Int              @default(1)
  lastMessageId      String?

  @@index([lastMessageId, chosenCharId])
}

model CharSubmission {
  id Int @id @default(autoincrement())

  charId          Int
  messageIdBundle String
  authorId        String

  author User @relation("userSubmission", fields: [authorId], references: [id])
  Char   Char @relation(fields: [charId], references: [id])

  @@index([authorId, charId])
}

model ServerComponents {
  componentId Int    @id @default(autoincrement())
  instance    String @unique
  channelId   String @unique
  messageId   String @unique

  @@index([channelId, messageId, instance])
}

model ServerMessages {
  messageId String  @id @unique
  channelId String
  author    User?   @relation("user", fields: [authorId], references: [id])
  authorId  String?

  @@index([authorId])
}

model Char {
  id              Int      @id @default(autoincrement())
  name            String
  isApproved      Boolean  @default(false)
  sum             String
  phantom         String
  personality     String
  gender          String
  appearance      String
  ability         String
  avatar          String
  kills           Int      @default(0)
  expTotal        Int      @default(0)
  expCache        Int      @default(0)
  level           Int      @default(1)
  attributePoints Int      @default(2)
  money           Int      @default(0)
  createdAt       DateTime @default(now())

  author    User       @relation(fields: [authorId], references: [id])
  chosenBy  User?      @relation("chosenChar", fields: [chosenById], references: [id])
  weapons   Weapons?   @relation(fields: [weaponsId], references: [id])
  equipment Equipment? @relation(fields: [equipmentsId], references: [id])
  backpack  Backpack?  @relation(fields: [backpackId], references: [id])
  skills    Skills?    @relation(fields: [skillsId], references: [id])
  title     Title?     @relation(fields: [titleId], references: [id])

  authorId       String
  chosenById     String?          @unique
  weaponsId      Int?             @unique
  equipmentsId   Int?             @unique
  backpackId     Int?             @unique
  skillsId       Int?             @unique
  titleId        Int?
  charSubmission CharSubmission[]

  @@index([authorId, chosenById, titleId, skillsId, backpackId, equipmentsId, weaponsId])
}

model Title {
  id      Int    @id @default(autoincrement())
  name    String
  iconURL String
  chars   Char[]
}

model Skills {
  id   Int   @id @default(autoincrement())
  sta  Int   @default(0)
  str  Int   @default(0)
  dex  Int   @default(0)
  mind Int   @default(0)
  res  Int   @default(0)
  vit  Int   @default(0)
  prf  Int   @default(0)
  pri  Int   @default(0)
  ele  Int   @default(0)
  char Char?
}

model Backpack {
  id    Int    @id @default(autoincrement())
  char  Char?
  items Item[]
}

model Equipment {
  id    Int   @id @default(autoincrement())
  head  Item? @relation("head", fields: [headId], references: [id])
  neck  Item? @relation("neck", fields: [neckId], references: [id])
  chest Item? @relation("chest", fields: [chestId], references: [id])
  hands Item? @relation("hands", fields: [handsId], references: [id])
  legs  Item? @relation("legs", fields: [legsId], references: [id])
  feet  Item? @relation("feet", fields: [feetId], references: [id])

  headId  Int?
  neckId  Int?
  chestId Int?
  handsId Int?
  legsId  Int?
  feetId  Int?

  char Char?

  @@index([headId, neckId, chestId, handsId, legsId, feetId])
}

model Weapons {
  id   Int  @id @default(autoincrement())
  main Int?
  off  Int?

  char Char?
}

model Item {
  id     Int    @id @default(autoincrement())
  name   String @unique
  type   String
  rarity String
  cost   Int

  imageURL    String
  description String

  base            Int
  multiplierType  String
  multiplierValue Int

  quantity   Int
  isEquipped Boolean
  backpacks  Backpack[]

  heads  Equipment[] @relation("head")
  necks  Equipment[] @relation("neck")
  chests Equipment[] @relation("chest")
  hands  Equipment[] @relation("hands")
  legs   Equipment[] @relation("legs")
  feets  Equipment[] @relation("feet")
}
